{"version":3,"sources":["ng://ngx-imagesloaded/lib/ngx-imagesloaded.service.ts","ng://ngx-imagesloaded/lib/ngx-imagesloaded.directive.ts","ng://ngx-imagesloaded/lib/ngx-imagesloaded.module.ts"],"names":["NgxImagesloadedService","Injectable","args","providedIn","NgxImagesloadedDirective","el","this","EventEmitter","prototype","ngOnInit","_this","instance","imagesLoaded","nativeElement","options","always","emit","on","image","ngOnDestroy","off","Directive","selector","ElementRef","Output","Input","NgxImagesloadedModule","NgModule","declarations","exports","providers"],"mappings":"4WAAA,IAAAA,EAAA,WAOE,SAAAA,gCALDC,EAAAA,WAAUC,KAAA,CAAC,CACVC,WAAY,sJAHd,GCAAC,EAAA,WAmCE,SAAAA,EAAoBC,GAAAC,KAAAD,GAAAA,cAzBiB,IAAIE,EAAAA,uBAIN,IAAIA,EAAAA,uBAIJ,IAAIA,EAAAA,2BAOlC,IAAIA,EAAAA,oBAaTH,EAAAI,UAAAC,SAAA,WAAA,IAAAC,EAAAJ,KACEA,KAAKK,SAAWC,EACdN,KAAKD,GAAGQ,cACRP,KAAKQ,QACL,SAAAH,GACED,EAAKK,OAAOC,KAAKL,KAIrBL,KAAKK,SAASM,GAAG,SAAU,SAAAN,GAAY,OAAAD,EAAKK,OAAOC,KAAKL,KACxDL,KAAKK,SAASM,GAAG,OAAQ,SAAAN,GAAY,OAAAD,EAAKK,OAAOC,KAAKL,KACtDL,KAAKK,SAASM,GAAG,OAAQ,SAAAN,GAAY,OAAAD,EAAKK,OAAOC,KAAKL,KACtDL,KAAKK,SAASM,GAAG,WAAY,SAACN,EAAUO,GACtC,OAAAR,EAAKK,OAAOC,KAAK,CAAEL,SAAQA,EAAEO,MAAKA,OAKtCd,EAAAI,UAAAW,YAAA,WAAA,IAAAT,EAAAJ,KACEA,KAAKK,SAASS,IAAI,SAAU,SAAAT,GAAY,OAAAD,EAAKK,OAAOC,KAAKL,KACzDL,KAAKK,SAASS,IAAI,QAAS,SAAAT,GAAY,OAAAD,EAAKK,OAAOC,KAAKL,KACxDL,KAAKK,SAASS,IAAI,OAAQ,SAAAT,GAAY,OAAAD,EAAKK,OAAOC,KAAKL,KACvDL,KAAKK,SAASS,IAAI,WAAY,SAACT,EAAUO,GACvC,OAAAR,EAAKK,OAAOC,KAAK,CAAEL,SAAQA,EAAEO,MAAKA,2BAzDvCG,EAAAA,UAASnB,KAAA,CAAC,CACToB,SAAU,8DALQC,EAAAA,8CASjBC,EAAAA,qBAIAA,EAAAA,qBAIAA,EAAAA,yBAIAA,EAAAA,wBAOAC,EAAAA,WA5BH,GCAAC,EAAA,oDAICC,EAAAA,SAAQzB,KAAA,CAAC,CACR0B,aAAc,CAACxB,GACfyB,QAAS,CAACzB,GACV0B,UAAW,CAAC9B,SAPd","sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NgxImagesloadedService {\n\n  constructor() { }\n}\n","import { Directive, ElementRef, EventEmitter, Input, OnDestroy, OnInit, Output } from '@angular/core';\nimport imagesLoaded from 'imagesloaded';\nimport { NgxImagesloadedOptions } from './ngx-imagesloaded-options';\n\n@Directive({\n  selector: '[imagesLoaded]'\n})\nexport class NgxImagesloadedDirective implements OnInit, OnDestroy {\n  //\n  @Output()\n  always: EventEmitter<imagesLoaded> = new EventEmitter();\n\n  //\n  @Output()\n  done: EventEmitter<imagesLoaded> = new EventEmitter();\n\n  //\n  @Output()\n  fail: EventEmitter<imagesLoaded> = new EventEmitter();\n\n  //\n  @Output()\n  progress: EventEmitter<{\n    instance: imagesLoaded;\n    image: any;\n  }> = new EventEmitter();\n\n  //\n  @Input()\n  options: NgxImagesloadedOptions;\n\n  //\n  private instance: imagesLoaded;\n\n  //\n  constructor(private el: ElementRef) {}\n\n  //\n  ngOnInit() {\n    this.instance = imagesLoaded(\n      this.el.nativeElement,\n      this.options,\n      instance => {\n        this.always.emit(instance);\n      }\n    );\n\n    this.instance.on('always', instance => this.always.emit(instance));\n    this.instance.on('done', instance => this.always.emit(instance));\n    this.instance.on('fail', instance => this.always.emit(instance));\n    this.instance.on('progress', (instance, image) =>\n      this.always.emit({ instance, image })\n    );\n  }\n\n  //\n  ngOnDestroy() {\n    this.instance.off('always', instance => this.always.emit(instance));\n    this.instance.off('doffe', instance => this.always.emit(instance));\n    this.instance.off('fail', instance => this.always.emit(instance));\n    this.instance.off('progress', (instance, image) =>\n      this.always.emit({ instance, image })\n    );\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { NgxImagesloadedDirective } from './ngx-imagesloaded.directive';\nimport { NgxImagesloadedService } from './ngx-imagesloaded.service';\n\n@NgModule({\n  declarations: [NgxImagesloadedDirective],\n  exports: [NgxImagesloadedDirective],\n  providers: [NgxImagesloadedService]\n})\nexport class NgxImagesloadedModule {}\n"]}