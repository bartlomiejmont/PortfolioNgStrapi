!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("@angular/core"),require("imagesloaded")):"function"==typeof define&&define.amd?define("ngx-imagesloaded",["exports","@angular/core","imagesloaded"],t):t(e["ngx-imagesloaded"]={},e.ng.core,null)}(this,function(e,t,i){"use strict";i=i&&i.hasOwnProperty("default")?i["default"]:i;var n=function(){function e(){}return e.decorators=[{type:t.Injectable,args:[{providedIn:"root"}]}],e.ctorParameters=function(){return[]},e.ngInjectableDef=t.defineInjectable({factory:function(){return new e},token:e,providedIn:"root"}),e}(),o=function(){function e(e){this.el=e,this.always=new t.EventEmitter,this.done=new t.EventEmitter,this.fail=new t.EventEmitter,this.progress=new t.EventEmitter}return e.prototype.ngOnInit=function(){var n=this;this.instance=i(this.el.nativeElement,this.options,function(e){n.always.emit(e)}),this.instance.on("always",function(e){return n.always.emit(e)}),this.instance.on("done",function(e){return n.always.emit(e)}),this.instance.on("fail",function(e){return n.always.emit(e)}),this.instance.on("progress",function(e,t){return n.always.emit({instance:e,image:t})})},e.prototype.ngOnDestroy=function(){var n=this;this.instance.off("always",function(e){return n.always.emit(e)}),this.instance.off("doffe",function(e){return n.always.emit(e)}),this.instance.off("fail",function(e){return n.always.emit(e)}),this.instance.off("progress",function(e,t){return n.always.emit({instance:e,image:t})})},e.decorators=[{type:t.Directive,args:[{selector:"[imagesLoaded]"}]}],e.ctorParameters=function(){return[{type:t.ElementRef}]},e.propDecorators={always:[{type:t.Output}],done:[{type:t.Output}],fail:[{type:t.Output}],progress:[{type:t.Output}],options:[{type:t.Input}]},e}(),r=function(){function e(){}return e.decorators=[{type:t.NgModule,args:[{declarations:[o],exports:[o],providers:[n]}]}],e}();e.NgxImagesloadedService=n,e.NgxImagesloadedModule=r,e.Éµa=o,Object.defineProperty(e,"__esModule",{value:!0})});
//# sourceMappingURL=ngx-imagesloaded.umd.min.js.map